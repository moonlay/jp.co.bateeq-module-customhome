<script>
// Create shipping address form
const formShippingAddress = document.createElement('form');
formShippingAddress.classList.add('form-shipping-address');
formShippingAddress.classList.add('form-shipping-address--duplicate');
document.body.appendChild(formShippingAddress);

// Create post code input text
const inputPostCode = document.createElement('input');
inputPostCode.setAttribute('type', 'text');
inputPostCode.setAttribute('name', 'postcode');
formShippingAddress.appendChild(inputPostCode);

// Create region input text
const inputRegion = document.createElement('input');
inputRegion.setAttribute('type', 'text');
inputRegion.setAttribute('name', 'region');
formShippingAddress.appendChild(inputRegion);

// Create city input text
const inputCity = document.createElement('input');
inputCity.setAttribute('type', 'text');
inputCity.setAttribute('name', 'city');
formShippingAddress.appendChild(inputCity);

// Create street0 input text
const inputStreet0 = document.createElement('input');
inputStreet0.setAttribute('type', 'text');
inputStreet0.setAttribute('name', 'street[0]');
formShippingAddress.appendChild(inputStreet0);

// Create stree1 input text
const inputStreet1 = document.createElement('input');
inputStreet1.setAttribute('type', 'text');
inputStreet1.setAttribute('name', 'street[1]');
formShippingAddress.appendChild(inputStreet1);

// Create country select option
const selectCountryId = document.createElement('select');
const optionJapan = document.createElement('option');
const japanText = document.createTextNode('Japan');
optionJapan.setAttribute('value', 'JP');
optionJapan.appendChild(japanText);
selectCountryId.setAttribute('name', 'country_id');
selectCountryId.appendChild(optionJapan);
formShippingAddress.appendChild(selectCountryId);

// Create method shipping form
const formMethodShipping = document.createElement('form');
formMethodShipping.classList.add('methods-shipping');
formMethodShipping.classList.add('methods-shipping--duplicate');
document.body.appendChild(formMethodShipping);

// Create submit/continue button
const submitButton = document.createElement('button');
submitButton.setAttribute('type', 'submit');
submitButton.classList.add('continue');
submitButton.innerHTML = 'Submit';
formMethodShipping.appendChild(submitButton);

//Remove temp elements
setTimeout(() => {
  formShippingAddress.parentNode.removeChild(formShippingAddress);
  formMethodShipping.parentNode.removeChild(formMethodShipping);
}, 1500);

// Create post code alert
const alert = document.createElement('div');
alert.classList.add('message');
alert.classList.add('warning');
alert.classList.add('custom-alert');

// Create post code message
const postCodeMessage = document.createElement('span');
alert.appendChild(postCodeMessage);

// Read-only and disabled
document.querySelector('[name=region]').readOnly = true;
document.querySelector('[name=city]').readOnly = true;
document.querySelector('.continue').disabled = true;

// Yubinbango library customize by Moonlay for Bateeq Japan
var t = [],
  YubinBango;
!(function(YubinBango) {
  var n = (function() {
    function n(t, n) {
      if (
        (void 0 === t && (t = ''),
        (this.URL = 'https://moonlay.github.io/yubinbango-data/data'),
        (this.g = [
          null,
          '北海道',
          '青森県',
          '岩手県',
          '宮城県',
          '秋田県',
          '山形県',
          '福島県',
          '茨城県',
          '栃木県',
          '群馬県',
          '埼玉県',
          '千葉県',
          '東京都',
          '神奈川県',
          '新潟県',
          '富山県',
          '石川県',
          '福井県',
          '山梨県',
          '長野県',
          '岐阜県',
          '静岡県',
          '愛知県',
          '三重県',
          '滋賀県',
          '京都府',
          '大阪府',
          '兵庫県',
          '奈良県',
          '和歌山県',
          '鳥取県',
          '島根県',
          '岡山県',
          '広島県',
          '山口県',
          '徳島県',
          '香川県',
          '愛媛県',
          '高知県',
          '福岡県',
          '佐賀県',
          '長崎県',
          '熊本県',
          '大分県',
          '宮崎県',
          '鹿児島県',
          '沖縄県',
        ]),
        t)
      ) {
        var e = t.replace(/[０-９]/g, function(t) {
            return String.fromCharCode(t.charCodeAt(0) - 65248);
          }),
          r = e.match(/\d/g),
          o = r.join(''),
          i = this.h(o);
        i ? this.i(i, n) : n(this.j());
      }
    }
    return (
      (n.prototype.h = function(t) {
        if (7 === t.length) {
          if(postCodeMessage.textContent !== '') {
            const postCodeDiv = document.querySelector('[name=postcode]').parentElement;
            postCodeDiv.appendChild(alert);
            alert.style.display = "block";
          }else {
            alert.style.display = "none";
          }
          return t
        }else {
          alert.style.display = "none";
        };
      }),
      (n.prototype.j = function(t, n, e, r, o) {
        return (
          void 0 === t && (t = ''),
          void 0 === n && (n = ''),
          void 0 === e && (e = ''),
          void 0 === r && (r = ''),
          void 0 === o && (o = ''),
          {k: t, region: n, l: e, m: r, o: o}
        );
      }),
      (n.prototype.p = function(t) {
        return t && t[0] && t[1] ? this.j(t[0], this.g[t[0]], t[1], t[2], t[3]) : this.j();
      }),
      (n.prototype.q = function(t, n) {
        window.$yubin = function(t) {
          return n(t);
        };
        var e = document.createElement('script');
        e.setAttribute('type', 'text/javascript'),
          e.setAttribute('charset', 'UTF-8'),
          e.setAttribute('src', t),
          document.head.appendChild(e);
      }),
      (n.prototype.i = function(n, e) {
        var r = this,
          o = n.substr(0, 3);
        return o in t && n in t[o]
          ? e(this.p(t[o][n]))
          : void this.q(this.URL + '/' + o + '.js', function(i) {
              return (t[o] = i), e(r.p(i[n]));
            });
      }),
      n
    );
  })();
  YubinBango.Core = n;
})(YubinBango || (YubinBango = {}));
var n = ['', ' ', 'Japan', 'JP', 'JPN', 'JAPAN'],
  e = ['region_id', 'region', 'city', 'street\\[0\\]', 'street\\[1\\]'],
  YubinBango;
!(function(YubinBango) {
  var t = (function() {
    function t() {
      this.s();
    }
    return (
      (t.prototype.s = function() {
        var n = this,
          e = document.querySelectorAll('.form-shipping-address');
        [].map.call(e, function(e) {
          if (n.t(e)) {
            var r = e.querySelectorAll('[name=postcode]');
            document.addEventListener('keyup', function(e) {
              if (e.target.getAttribute('name') === 'postcode') {
                t.prototype.u(n.v(e.target.parentNode));
              }
            });
          }
        });
      }),
      (t.prototype.v = function(t) {
        return 'FORM' === t.tagName || t.classList.contains('form-shipping-address') ? t : this.v(t.parentNode);
      }),
      (t.prototype.t = function(t) {
        var e = t.querySelector('[name=country_id]'),
          r = [e.innerHTML, e.value];
        return r.some(function(t) {
          return n.indexOf(t) >= 0;
        });
      }),
      (t.prototype.u = function(t) {
        var n = this,
          e = t.querySelectorAll('[name=postcode]');
        new YubinBango.Core(this.A(e), function(e) {
          return n.B(t, e);
        });
      }),
      (t.prototype.A = function(t) {
        return [].map
          .call(t, function(t) {
            return t.value;
          })
          .reduce(function(t, n) {
            return t + n;
          });
      }),
      (t.prototype.B = function(t, n) {
        var r = [this.C, this.D];
        r.map(function(r) {
          return e.map(function(e) {
            return r(e, t, n);
          });
        });
      }),
      (t.prototype.C = function(t, n, e) {
        if (e) {
          var r = n.querySelectorAll('[name=' + t + ']');
          [].map.call(r, function(t) {
            return (t.value = '');
          });
        }
      }),
      (t.prototype.D = function(t, n, e) {
        var r = {region_id: e.k, region: e.region, city: e.l, 'street\\[0\\]': e.m, 'street\\[1\\]': e.o},
          o = n.querySelectorAll('[name=' + t + ']');
        [].map.call(o, function(n) {
          if(r.region_id) {
            document.querySelector('.continue').disabled = false;
            document.querySelector('[name=region]').readOnly = true;
            document.querySelector('[name=city]').readOnly = true;
            alert.style.display = "none";
            postCodeMessage.textContent = "";
          } else {
            document.querySelector('.continue').disabled = true;
            postCodeMessage.textContent = "郵便番号が見つかりません";
          }
          return (n.value += r[t] ? r[t] : '');
        });
      }),
      t
    );
  })();
  YubinBango.MicroformatDom = t;
})(YubinBango || (YubinBango = {})),
  document.addEventListener(
    'DOMContentLoaded',
    function() {
      new YubinBango.MicroformatDom();
    },
    !1,
  );
</script>